// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_clean_architecture_sample/test/data/ip/datasource/ip_remote_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_clean_architecture_sample/core/network/i_api_request_manager.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IApiRequestManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockIApiRequestManager extends _i1.Mock
    implements _i2.IApiRequestManager {
  @override
  _i3.Future<dynamic> getRequest({
    required String? path,
    Map<String, dynamic>? params,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequest,
          [],
          {
            #path: path,
            #params: params,
            #headers: headers,
          },
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> postRequest({
    required String? path,
    Map<String, dynamic>? params,
    Map<String, dynamic>? headers,
    required dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postRequest,
          [],
          {
            #path: path,
            #params: params,
            #headers: headers,
            #body: body,
          },
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}
